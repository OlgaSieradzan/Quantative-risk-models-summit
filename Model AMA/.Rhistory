del <- data.frame(table(database$rok[database$linia == "Execut_Del"]))
ex <- data.frame(table(database$rok[database$linia == "External_Fr"]))
intr <- data.frame(table(database$rok[database$linia == "Internal_Fr"]))
colnames(bus) <- c("Year", "Buss_Distr")
colnames(com) <- c("Year", "Com_Ban")
colnames(dam) <- c("Year", "Damage")
colnames(empl) <- c("Year", "Empl_Pract")
colnames(del) <- c("Year", "Execut_Del")
colnames(ex) <- c("Year", "External_Fr")
colnames(intr) <- c("Year", "Internal_Fr")
df_list <- list(bus, com, dam, empl, del, ex, intr)
final_df <- Reduce(function(x, y) merge(x, y, by = "Year", all = TRUE), df_list)
final_df
numeric_df <- final_df[, -1]
means <- colMeans(numeric_df, na.rm = TRUE)
variances <- apply(numeric_df, 2, var, na.rm = TRUE)
stats_df <- data.frame(
Średnia = means,
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
library(MASS)
library(fitdistrplus)
database <- read.csv("C:/Users/olgas/OneDrive/Documents/GitHub/Quantative-risk-models-summit/Model AMA/plik1.csv")
n <- data.frame(table(database$linia))
bus <- data.frame(table(database$rok[database$linia == "Buss_Distr"]))
com <- data.frame(table(database$rok[database$linia == "Com_Ban"]))
dam <- data.frame(table(database$rok[database$linia == "Damage"]))
empl <- data.frame(table(database$rok[database$linia == "Empl_Pract"]))
del <- data.frame(table(database$rok[database$linia == "Execut_Del"]))
ex <- data.frame(table(database$rok[database$linia == "External_Fr"]))
intr <- data.frame(table(database$rok[database$linia == "Internal_Fr"]))
colnames(bus) <- c("Year", "Buss_Distr")
colnames(com) <- c("Year", "Com_Ban")
colnames(dam) <- c("Year", "Damage")
colnames(empl) <- c("Year", "Empl_Pract")
colnames(del) <- c("Year", "Execut_Del")
colnames(ex) <- c("Year", "External_Fr")
colnames(intr) <- c("Year", "Internal_Fr")
df_list <- list(bus, com, dam, empl, del, ex, intr)
final_df <- Reduce(function(x, y) merge(x, y, by = "Year", all = TRUE), df_list)
final_df
numeric_df <- final_df[, -1]
means <- colMeans(numeric_df, na.rm = TRUE)
variances <- apply(numeric_df, 2, var, na.rm = TRUE)
stats_df <- data.frame(
Średnia = means,
r_neg_binom <- (stats_df$Średnia)^2 / (stats_df$Wariancja - stats_df$Średnia)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
library(MASS)
library(fitdistrplus)
database <- read.csv("C:/Users/olgas/OneDrive/Documents/GitHub/Quantative-risk-models-summit/Model AMA/plik1.csv")
n <- data.frame(table(database$linia))
bus <- data.frame(table(database$rok[database$linia == "Buss_Distr"]))
com <- data.frame(table(database$rok[database$linia == "Com_Ban"]))
dam <- data.frame(table(database$rok[database$linia == "Damage"]))
empl <- data.frame(table(database$rok[database$linia == "Empl_Pract"]))
del <- data.frame(table(database$rok[database$linia == "Execut_Del"]))
ex <- data.frame(table(database$rok[database$linia == "External_Fr"]))
intr <- data.frame(table(database$rok[database$linia == "Internal_Fr"]))
colnames(bus) <- c("Year", "Buss_Distr")
colnames(com) <- c("Year", "Com_Ban")
colnames(dam) <- c("Year", "Damage")
colnames(empl) <- c("Year", "Empl_Pract")
colnames(del) <- c("Year", "Execut_Del")
colnames(ex) <- c("Year", "External_Fr")
colnames(intr) <- c("Year", "Internal_Fr")
df_list <- list(bus, com, dam, empl, del, ex, intr)
final_df <- Reduce(function(x, y) merge(x, y, by = "Year", all = TRUE), df_list)
final_df
numeric_df <- final_df[, -1]
means <- colMeans(numeric_df, na.rm = TRUE)
variances <- apply(numeric_df, 2, var, na.rm = TRUE)
stats_df <- data.frame(
Średnia = means,
Wariancja = variances,
Różnica = means - variances
)
stats_df
r_neg_binom <- (stats_df$Średnia)^2 / (stats_df$Wariancja - stats_df$Średnia)
p_neg_binom <- stats_df$Średnia / stats_df$Wariancja
dwu_uj <- data.frame(
Line = names(means),
r = r_neg_binom,
p = p_neg_binom
)
dwu_uj <- dwu_uj[c(3,7),]
fit_negbin_with_tests <- function(data) {
fit <- fitdist(data, "nbinom",
method = "mse",
start = list(size = 1, mu = mean(data)))
gof <- gofstat(fit)
chisq_test <- ifelse(gof$chisqpvalue < 0.05, "H0 odrzucona", "H0 nieodrzucona")
return(list(
size = round( fit$estimate["size"], 0),
mu = fit$estimate["mu"],
chisq_result = chisq_test
))
}
results <- mapply(fit_negbin_with_tests,
final_df[,c(4,8)],
SIMPLIFY = FALSE)
dwu_uj$size <- sapply(results, function(x) x$size)
dwu_uj$mu <- sapply(results, function(x) x$mu)
dwu_uj$chisq_test <- sapply(results, function(x) x$chisq_result)
dwu_uj[,c(1,4,5,6)]
N = (stats_df$Średnia)^2/ (stats_df$Różnica)
dwu_df <- data.frame(
Line = names(means),
n = round(N, 0),
p = (stats_df$Średnia)/ N
)
dwu_df1 <- dwu_df[c(1,2,4,5,6),]
fit_binomial_with_tests <- function(data, n) {
fit <- fitdist(data, "binom",
start = list(prob = 0.5),
fix.arg = list(size = n),
method = "mse")
gof <- gofstat(fit)
chisq_test <- ifelse(gof$chisqpvalue < 0.05, "H0 odrzucona", "H0 nieodrzucona")
return(list(
p = fit$estimate["prob"],
size = fit$estimate["size"],
chisq_result = chisq_test
))
}
results <- mapply(fit_binomial_with_tests,
final_df[,c(2,3,5,6,7)],
360,
SIMPLIFY = FALSE)
dwu_df1$p <- sapply(results, function(x) x$p)
dwu_df1$chisq_test <- sapply(results, function(x) x$chisq_result)
dwu_df1$size <- sapply(results, function(x) x$size)
dwu_df1
fit_poisson_simple <- function(data) {
fit <- fitdist(data, "pois", start = list(lambda = mean(data)))
gof <- gofstat(fit)
return(list(
lambda = fit$estimate,
chisq_test = ifelse(gof$chisqpvalue < 0.05,
"H0 odrzucona",
"H0 nieodrzucona")
))
}
results <- fit_poisson_simple(
as.vector(final_df$Empl_Pract)
)
dw_po <- data.frame(
Line = "Empl_Prac",
lambda = results$lambda,
chisq_test = results$chisq_test
)
dw_po
fit_geometric_simple <- function(data) {
fit <- fitdist(data, "geom", method = "mle")
gof <- gofstat(fit)
return(list(
prob = fit$estimate["prob"],  # Parametr rozkładu geometrycznego
chisq_test = ifelse(gof$chisqpvalue < 0.05,
"H0 odrzucona",
"H0 nieodrzucona")
))
}
results <- fit_geometric_simple(
as.vector(final_df$Empl_Pract)
)
dw_geom <- data.frame(
Line = "Empl_Prac",
prob = results$prob,
chisq_test = results$chisq_test
)
# Wyświetlamy wyniki
print(dw_geom)
pod <- data.frame(
Linia = names(means),
Rozkład = c("Rozkład dwumianowy", "Rozkład dwumianowy", "Rozkład dwumianowy ujemny", "Rozkład Poissona",  "Rozkład dwumianowy","Rozkład dwumianowy", "Rozkład dwumianowy ujemny"),
Parematry = c("", "", "size = 4, mu = 18.56", "", "", "", "size = 60, mu = 100.83")
)
pod
dwu_uj[,c(1,4,5,6)]
p1 <- ggplot()+
geom_density( data = final_df, aes(x = Buss_Distr, color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rbinom(1000, size = dwu_df1$n[1], prob = dwu_df$p[1]), color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Buss_distr", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
p2 <- ggplot()+
geom_density( data = final_df, aes(x = Com_Ban, color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rbinom(1000, size = dwu_df1$n[2], prob = dwu_df$p[2]), color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Com_ban", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
plot_grid(p1, p2, nrow = 2, ncol = 1)
p1 <- ggplot()+
geom_density( data = final_df, aes(x =Execut_Del, color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rbinom(1000, size = dwu_df1$n[4], prob = dwu_df$p[4])+2, color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Excut_Del", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
p2 <- ggplot()+
geom_density( data = final_df, aes(x = External_Fr, color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rbinom(1000, size = dwu_df1$n[5], prob = dwu_df$p[5]) +1.5, color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "External_fr", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
plot_grid(p1, p2, nrow = 2, ncol = 1)
p1 <- ggplot()+
geom_density( data = final_df, aes(x = Damage, color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rnbinom(1000, size = dwu_uj$size[1], mu = dwu_uj$mu[1]), color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Damage", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
p2 <- ggplot()+
geom_density( data = final_df, aes(x = Internal_Fr, color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rnbinom(1000, size = dwu_uj$size[2], mu = dwu_uj$mu[2]), color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Internal_fr", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
plot_grid(p1, p2, nrow = 2, ncol = 1)
ggplot()+
geom_density( data = final_df, aes(x = Empl_Pract, color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rpois(1000, lambda = dw_po$lambda), color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Empl_pract", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
straty_lista <-split(database$strata, database$linia)
straty_stat <- database %>%
group_by(linia) %>%
summarise(
Średnia = mean(strata, na.rm = TRUE),
Sd = sd(strata, na.rm = TRUE),
Mediana = median(strata, na.rm = TRUE),
Liczba_obserwacji = n()
) %>%
arrange(desc(Średnia))
straty_stat
fit_dis<- function(data_list, distributions = c("weibull", "gamma", "lnorm", "exp", "norm")) {
results <- data.frame()
for (linia in names(data_list)) {
data <- data_list[[linia]]
data <- data[data > 0]
for (dist in distributions) {
fit <- tryCatch({
fitdist(data, distr = dist, method = "mle")
}, error = function(e) {
message(sprintf("Błąd dopasowania %s dla linii %s: %s", dist, linia, e$message))
return(NULL)
})
if (!is.null(fit)) {
gof <- gofstat(fit)
results <- rbind(results, data.frame(
linia = linia,
rozklad = dist,
parametry = paste(names(fit$estimate), round(fit$estimate, 4), sep = "=", collapse = ", "),
KS_wynik = gof$kstest,
AD_wynik = gof$adtest ,
AIC = gof$aic,
stringsAsFactors = FALSE
))
}
}
}
return(results)
}
wyniki <- fit_dis(straty_lista)
rownames(wyniki) <- NULL
wyniki[,c(1:5)]
#ggcomb
wyniki[,c(1,2,6)]
wyniki[c(12,24,28), c(1,2,3)]
frame_Damage <- data.frame(straty_lista[[3]])
ggplot()+
geom_density( data = frame_Damage, aes(x = straty_lista..3.., color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rexp(1000, rate = 0.0002), color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Damage", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
frame_EX<- data.frame(straty_lista[[6]])
ggplot()+
geom_density( data = frame_EX, aes(x = straty_lista..6.., color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rexp(1000, rate = 0.0002), color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "External_FR", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
frame_IN<- data.frame(straty_lista[[7]])
ggplot()+
geom_density( data = frame_IN, aes(x = straty_lista..7.., color = "Empiryczny" ), size = 0.7) +
geom_density(aes ( x = rexp(1000, rate = 0.0002), color = "Dopasowany" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Internal_FR", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
frame_Buss<- data.frame(straty_lista[[1]])
frame_Com<- data.frame(straty_lista[[2]])
frame_Empl<- data.frame(straty_lista[[4]])
frame_Exe<- data.frame(straty_lista[[5]])
p1 <- ggplot()+
geom_density( data = frame_Buss, aes(x = straty_lista..1..), color = "#CD1076" , size = 0.7) +
labs (title = "Bussdistr", y = NULL, x = NULL)+
theme_light(base_size = 15)
p2 <- ggplot()+
geom_density( data = frame_Com, aes(x = straty_lista..2..), color = "#CD1076" , size = 0.7) +
labs (title = "Com_Ban", y = NULL, x = NULL)+
theme_light(base_size = 15)
p3 <- ggplot()+
geom_density( data = frame_Empl, aes(x = straty_lista..4..), color = "#CD1076", size = 0.7) +
labs (title = "Empl_Pract", y = NULL, x = NULL)+
theme_light(base_size = 15)
p4 <- ggplot()+
geom_density( data = frame_Exe, aes(x = straty_lista..5..),color = "#CD1076" , size = 0.7) +
labs (title = "Execute_Del", y = NULL, x = NULL)+
theme_light(base_size = 15)
plot_grid(p1, p2, p3, p4, nrow = 2, ncol = 2)
wyniki[c(1:5),]
wykres_qq <- function(data, distributions = c("weibull", "gamma", "lnorm", "exp", "norm")){
plots <- list()
i = 1
for (dist in distributions) {
plots[[i]] <- tryCatch({
fitdist(data, distr = dist, method = "mle")
}, error = function(e) {
message(sprintf("Błąd dopasowania %s dla linii"))
return(NULL)
})
i = i+1
}
plot_grid(qqcomp(plots[[1]]), qqcomp(plots[[2]]),qqcomp(plots[[3]]),qqcomp(plots[[4]]), nrow = 2, ncol = 2)
}
wykres_qq(frame_Buss$straty_lista..1.., distributions = c("weibull", "gamma", "lnorm", "exp"))
ggplot()+
geom_density(aes ( x = rlnorm(1000, meanlog = 2.7611, sdlog = 1.72), color = "Dopasowany" ), size = 0.7) +
geom_density( data = frame_Buss, aes(x = straty_lista..1.., color = "Empiryczny" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Buss_distr", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
wyniki[c(6:10),]
wykres_qq(frame_Com$straty_lista..2.., distributions = c("weibull", "gamma", "lnorm", "exp"))
ggplot()+
geom_density(aes ( x = rlnorm(1000, meanlog = 2.7611, sdlog = 1.72), color = "Dopasowany" ), size = 0.7) +
geom_density( data = frame_Buss, aes(x = straty_lista..1.., color = "Empiryczny" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Buss_distr", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
wyniki[c(16:20),]
wykres_qq(frame_Empl$straty_lista..4.., distributions = c("weibull", "gamma", "lnorm", "norm"))
ggplot()+
geom_density(aes ( x = rnorm(1000, mean = 40000, sd = 7779.48), color = "Dopasowany" ), size = 0.7) +
geom_density( data = frame_Empl, aes(x = straty_lista..4.., color = "Empiryczny" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Empl_pract", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
wyniki[c(21:25),]
wykres_qq(frame_Exe$straty_lista..5.., distributions = c("weibull", "gamma", "lnorm", "exp"))
ggplot()+
geom_density(aes ( x = rlnorm(1000, meanlog = 2.60, sdlog = 1.319), color = "Dopasowany" ), size = 0.7) +
geom_density( data = frame_Exe, aes(x = straty_lista..5.., color = "Empiryczny" ), size = 0.7) +
scale_color_manual(values = c("#CD1076", "orange"), breaks = c("Empiryczny", "Dopasowany"))+
labs (y = "Execute_del", x = NULL, colour = "Rozkład")+
theme_light(base_size = 18)
wyniki[c(3,8,14,20,23, 29,34), c(1,2,3)]
pod
symulacja <- function(){
result <- data.frame(Buss_distr = 0, Com_Ban = 0, Damage = 0, Empl_Pract = 0, Execute_Del = 0, External_Fr =0, Internal_FR =0)
for (i in 20000) {
result$Buss_distr[i] = sum(rlnorm(n = rbinom(1,size =, prob=), meanlog =2.76, sdlog = 1.72))
result$Com_Ban[i] = sum(rlnorm(n = rbinom(1,size =, prob=), meanlog =2.4, sdlog = 0.9))
result$Damage[i] = sum(rexp(n = rnbinom(1,size =, prob=), rate = 0.0002))
result$Empl_Pract[i] = sum(rnorm(n = rpois(1,lambda =), mean =2.76, sd = 1.72))
result$Execute_Del[i] = sum(rlnorm(n = rbinom(1,size =, prob=), meanlog =2.76, sdlog = 1.72))
result$External_Fr[i] = sum(rexp(n = rbinom(1,size =, prob=), rate = 1.72))
result$Internal_FR[i] = sum(rlnorm(n = rbinom(1,size =, prob=),  rate = 1.72))
}
result$Suma = rowsum(ressult)
return(result)
}
dwu_df1
pod <- data.frame(
Linia = names(means),
Rozkład = c("Rozkład dwumianowy", "Rozkład dwumianowy", "Rozkład dwumianowy ujemny", "Rozkład Poissona",  "Rozkład dwumianowy","Rozkład dwumianowy", "Rozkład dwumianowy ujemny"),
Parematry = c("size = 13, p = 0.02", "size = 34, p = 0.04", "size = 4, mu = 18.56", "size = 164, p = 0.17", "size =  31, p = 0.04", "size = 12, p = 0.02", "size = 60, mu = 100.83")
)
pod
dwu_df1
pod
dwu_uj
symulacja <- function(){
result <- data.frame(Buss_distr = 0, Com_Ban = 0, Damage = 0, Empl_Pract = 0, Execute_Del = 0, External_Fr =0, Internal_FR =0)
for (i in 20000) {
result$Buss_distr[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[1], prob= dwu_df1$p[1]), meanlog =2.76, sdlog = 1.72))
result$Com_Ban[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[2], prob= dwu_df1$p[2]), meanlog =2.4, sdlog = 0.9))
result$Damage[i] = sum(rexp(n = rnbinom(n = 1, size = dwu_uj$size[1], mu = dwu_uj$mu[1]), rate = 0.0002))
result$Empl_Pract[i] = sum(rnorm(n = rpois(1,lambda = 62), mean =2.76, sd = 1.72))
result$Execute_Del[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[3], prob= dwu_df1$p[3]), meanlog =2.76, sdlog = 1.72))
result$External_Fr[i] = sum(rexp(n = rbinom(1,size = dwu_df1$n[4], prob= dwu_df1$p[4]), rate = 1.72))
result$Internal_FR[i] = sum(rlnorm(n = rnbinom(n = 1, size = dwu_uj$size[2], mu = dwu_uj$mu[2]),  rate = 1.72))
}
result$Suma = rowsum(ressult)
return(result)
}
symulacja()
symulacja <- function(){
result <- data.frame(Buss_distr = 0, Com_Ban = 0, Damage = 0, Empl_Pract = 0, Execute_Del = 0, External_Fr =0, Internal_FR =0)
for (i in c(1:20000)) {
result$Buss_distr[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[1], prob= dwu_df1$p[1]), meanlog =2.76, sdlog = 1.72))
result$Com_Ban[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[2], prob= dwu_df1$p[2]), meanlog =2.4, sdlog = 0.9))
result$Damage[i] = sum(rexp(n = rnbinom(n = 1, size = dwu_uj$size[1], mu = dwu_uj$mu[1]), rate = 0.0002))
result$Empl_Pract[i] = sum(rnorm(n = rpois(1,lambda = 62), mean =2.76, sd = 1.72))
result$Execute_Del[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[3], prob= dwu_df1$p[3]), meanlog =2.76, sdlog = 1.72))
result$External_Fr[i] = sum(rexp(n = rbinom(1,size = dwu_df1$n[4], prob= dwu_df1$p[4]), rate = 1.72))
result$Internal_FR[i] = sum(rlnorm(n = rnbinom(n = 1, size = dwu_uj$size[2], mu = dwu_uj$mu[2]),  rate = 1.72))
}
result$Suma = rowsum(ressult)
return(result)
}
symulacja()
symulacja <- function(){
result <- data.frame(Buss_distr = 0, Com_Ban = 0, Damage = 0, Empl_Pract = 0, Execute_Del = 0, External_Fr =0, Internal_FR =0)
for (i in c(1:20000)) {
result$Buss_distr[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[1], prob= dwu_df1$p[1]), meanlog =2.76, sdlog = 1.72))
result$Com_Ban[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[2], prob= dwu_df1$p[2]), meanlog =2.4, sdlog = 0.9))
result$Damage[i] = sum(rexp(n = rnbinom(n = 1, size = dwu_uj$size[1], mu = dwu_uj$mu[1]), rate = 0.0002))
result$Empl_Pract[i] = sum(rnorm(n = rpois(1,lambda = 62), mean =2.76, sd = 1.72))
result$Execute_Del[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[3], prob= dwu_df1$p[3]), meanlog =2.76, sdlog = 1.72))
result$External_Fr[i] = sum(rexp(n = rbinom(1,size = dwu_df1$n[4], prob= dwu_df1$p[4]), rate = 0.0002))
result$Internal_FR[i] = sum(rlnorm(n = rnbinom(n = 1, size = dwu_uj$size[2], mu = dwu_uj$mu[2]), meanlog =2.60, sdlog = 1.31))
}
result$Suma = rowsum(ressult)
return(result)
}
symulacja()
symulacja <- function(){
result <- data.frame(Buss_distr = rep(0,20000), Com_Ban = rep(0,20000), Damage = rep(0,20000), Empl_Pract = rep(0,20000), Execute_Del = rep(0,20000), External_Fr =rep(0,20000), Internal_FR =rep(0,20000))
for (i in c(1:20000)) {
result$Buss_distr[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[1], prob= dwu_df1$p[1]), meanlog =2.76, sdlog = 1.72))
result$Com_Ban[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[2], prob= dwu_df1$p[2]), meanlog =2.4, sdlog = 0.9))
result$Damage[i] = sum(rexp(n = rnbinom(n = 1, size = dwu_uj$size[1], mu = dwu_uj$mu[1]), rate = 0.0002))
result$Empl_Pract[i] = sum(rnorm(n = rpois(1,lambda = 62), mean =2.76, sd = 1.72))
result$Execute_Del[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[3], prob= dwu_df1$p[3]), meanlog =2.76, sdlog = 1.72))
result$External_Fr[i] = sum(rexp(n = rbinom(1,size = dwu_df1$n[4], prob= dwu_df1$p[4]), rate = 0.0002))
result$Internal_FR[i] = sum(rlnorm(n = rnbinom(n = 1, size = dwu_uj$size[2], mu = dwu_uj$mu[2]), meanlog =2.60, sdlog = 1.31))
}
result$Suma = rowsum(ressult)
return(result)
}
symulacja()
symulacja <- function(){
result <- data.frame(Buss_distr = rep(0,20000), Com_Ban = rep(0,20000), Damage = rep(0,20000), Empl_Pract = rep(0,20000), Execute_Del = rep(0,20000), External_Fr =rep(0,20000), Internal_FR =rep(0,20000))
for (i in c(1:20000)) {
result$Buss_distr[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[1], prob= dwu_df1$p[1]), meanlog =2.76, sdlog = 1.72))
result$Com_Ban[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[2], prob= dwu_df1$p[2]), meanlog =2.4, sdlog = 0.9))
result$Damage[i] = sum(rexp(n = rnbinom(n = 1, size = dwu_uj$size[1], mu = dwu_uj$mu[1]), rate = 0.0002))
result$Empl_Pract[i] = sum(rnorm(n = rpois(1,lambda = 62), mean =2.76, sd = 1.72))
result$Execute_Del[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[3], prob= dwu_df1$p[3]), meanlog =2.76, sdlog = 1.72))
result$External_Fr[i] = sum(rexp(n = rbinom(1,size = dwu_df1$n[4], prob= dwu_df1$p[4]), rate = 0.0002))
result$Internal_FR[i] = sum(rlnorm(n = rnbinom(n = 1, size = dwu_uj$size[2], mu = dwu_uj$mu[2]), meanlog =2.60, sdlog = 1.31))
}
result$Suma = rowsum(result)
return(result)
}
symulacja()
symulacja <- function(){
result <- data.frame(Buss_distr = rep(0,20000), Com_Ban = rep(0,20000), Damage = rep(0,20000), Empl_Pract = rep(0,20000), Execute_Del = rep(0,20000), External_Fr =rep(0,20000), Internal_FR =rep(0,20000))
for (i in c(1:20000)) {
result$Buss_distr[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[1], prob= dwu_df1$p[1]), meanlog =2.76, sdlog = 1.72))
result$Com_Ban[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[2], prob= dwu_df1$p[2]), meanlog =2.4, sdlog = 0.9))
result$Damage[i] = sum(rexp(n = rnbinom(n = 1, size = dwu_uj$size[1], mu = dwu_uj$mu[1]), rate = 0.0002))
result$Empl_Pract[i] = sum(rnorm(n = rpois(1,lambda = 62), mean =2.76, sd = 1.72))
result$Execute_Del[i] = sum(rlnorm(n = rbinom(1,size = dwu_df1$n[3], prob= dwu_df1$p[3]), meanlog =2.76, sdlog = 1.72))
result$External_Fr[i] = sum(rexp(n = rbinom(1,size = dwu_df1$n[4], prob= dwu_df1$p[4]), rate = 0.0002))
result$Internal_FR[i] = sum(rlnorm(n = rnbinom(n = 1, size = dwu_uj$size[2], mu = dwu_uj$mu[2]), meanlog =2.60, sdlog = 1.31))
}
result$Suma = apply(result, 1, sum)
return(result)
}
symulacja()
wyniki <- symulacja()
head(wyniki)
density(wyniki$Suma)
plot(density(wyniki$Suma))
ggplot()+
geom_density(data = wyniki, aes = (x = Suma))
ggplot()+
geom_density(data = wyniki, aes = (x = Suma))
ggplot()+
geom_density(data = wyniki, aes = (x = wyniki$Suma))
wyniki%>%
ggplot()+
geom_density(aes(x = Suma))
statystyki_opisowe <- describe(wyniki)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
library(MASS)
library(fitdistrplus)
library(psych)
database <- read.csv("C:/Users/olgas/OneDrive/Documents/GitHub/Quantative-risk-models-summit/Model AMA/plik1.csv")
statystyki_opisowe <- describe(wyniki)
statystyki_opisowe
statystyki_opisowe <- describe(wyniki)
statystyki_opisowe[,c(3,4,5,8,9)]
