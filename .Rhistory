stopy_zwrotu_long <- pivot_longer(stopy_zwrotu, cols = starts_with("Year"), names_to = "Year", values_to = "StopaZwrotu")
stopy_zwrotu_long$Year <- as.numeric(gsub("Year", "", stopy_zwrotu_long$Year))
ggplot(stopy_zwrotu_long, aes(x = Year, y = StopaZwrotu, color = Rating, group = Rating)) +
geom_line(size = 1) +  # Linie dla każdego ratingu
geom_point(size = 2) +  # Punkty na wykresie
labs(
title = "Prognozowane stopy zwrotu w zależności od ratingu i roku",
x = "Lata",
y = "Stopa zwrotu (%)",
color = "Rating"
) +
theme_minimal() +
scale_x_continuous(breaks = 1:4, labels = c("Year 1", "Year 2", "Year 3", "Year 4")) +
scale_y_continuous(limits = c(0, 16))  # Zakres osi Y
obligacje <- data.frame(
rating = c("A", "B", "CCC"),
cena_wykupu = c(100000, 50000, 50000),
czas_do_wykupu = c(3, 5, 2),
typ = c("subordinated", "senior secured", "senior unsecured")
)
recovery_rate <- data.frame (
klasa = c("subordinated", "senior secured", "senior unsecured"),
stopa = c(32.74, 53.8, 51.13)
)
stopy_zwrotu <- data.frame(
Rating = c( "A", "B", "CCC"),
Year1 = c( 3.72,  6.05, 15.05),
Year2 = c( 4.32,  7.02, 15.02),
Year3 = c( 4.93,  8.03, 14.03),
Year4 = c( 5.32,  8.52, 13.52)
)
cor_matrix <- matrix(c(1, 0.2, 0.15,
0.2, 1, 0.4,
0.15, 0.4, 1), nrow = 3)
p <- as.data.frame(cor_matrix)
rownames(p) <- c(c("V1", "V2", "V3"))
p
library(tidyr)
stopy_zwrotu_long <- pivot_longer(stopy_zwrotu, cols = starts_with("Year"), names_to = "Year", values_to = "StopaZwrotu")
stopy_zwrotu_long$Year <- as.numeric(gsub("Year", "", stopy_zwrotu_long$Year))
ggplot(stopy_zwrotu_long, aes(x = Year, y = StopaZwrotu, color = Rating, group = Rating)) +
geom_line(size = 1) +  # Linie dla każdego ratingu
geom_point(size = 2) +  # Punkty na wykresie
labs(
title = "Prognozowane stopy zwrotu w zależności od ratingu i roku",
x = "Lata",
y = "Stopa zwrotu (%)",
color = "Rating"
) +
theme_minimal() +
scale_x_continuous(breaks = 1:4, labels = c("Year 1", "Year 2", "Year 3", "Year 4")) +
scale_y_continuous(limits = c(0, 16))  # Zakres osi Y
ggplot(stopy_zwrotu_long, aes(x = Year, y = StopaZwrotu, color = Rating, group = Rating)) +
geom_line(size = 1) +  # Linie dla każdego ratingu
geom_point(size = 2) +  # Punkty na wykresie
labs(
title = "Prognozowane stopy zwrotu w zależności od ratingu i roku",
x = "Lata",
y = "Stopa zwrotu (%)",
color = "Rating"
) +
theme_minimal(base_size = 18) +
scale_x_continuous(breaks = 1:4, labels = c("Year 1", "Year 2", "Year 3", "Year 4")) +
scale_y_continuous(limits = c(0, 16))  # Zakres osi Y
wykres_slupkowy <- ggplot(recovery_rate, aes(x = klasa, y = stopa, fill = klasa)) +
geom_bar(stat = "identity", width = 0.6) +  # Wykres słupkowy
labs(
title = "Stopy odzysku w zależności od klasy obligacji",
x = "Klasa obligacji",
y = "Stopa odzysku (%)",
fill = "Klasa obligacji"
) +
theme_minimal() +  # Minimalistyczny styl wykresu
scale_fill_manual(values = c("subordinated" = "#1f77b4", "senior secured" = "#ff7f0e", "senior unsecured" = "#2ca02c"))
ggplot(recovery_rate, aes(x = klasa, y = stopa, fill = klasa)) +
geom_bar(stat = "identity", width = 0.6) +  # Wykres słupkowy
labs(
title = "Stopy odzysku w zależności od klasy obligacji",
x = "Klasa obligacji",
y = "Stopa odzysku (%)",
fill = "Klasa obligacji"
) +
theme_minimal() +  # Minimalistyczny styl wykresu
scale_fill_manual(values = c("subordinated" = "#1f77b4", "senior secured" = "#ff7f0e", "senior unsecured" = "#2ca02c"))
ggplot(recovery_rate, aes(x = klasa, y = stopa, fill = klasa)) +
geom_bar(stat = "identity", width = 0.6) +  # Wykres słupkowy
labs(
title = "Stopy odzysku ",
x = "Klasa obligacji",
y = "Stopa odzysku (%)",
fill = "Klasa obligacji"
) +
theme_minimal(base_size = 18) +  # Minimalistyczny styl wykresu
scale_fill_manual(values = c("subordinated" = "#1f77b4", "senior secured" = "#ff7f0e", "senior unsecured" = "#2ca02c"))
ggplot(recovery_rate, aes(x = klasa, y = stopa, fill = klasa)) +
geom_bar(stat = "identity", width = 0.6) +  # Wykres słupkowy
labs(
title = "Stopy odzysku ",
x = "Klasa obligacji",
y = "Stopa odzysku (%)",
fill = "Klasa obligacji",
legend = NULL
) +
theme_minimal(base_size = 18) +  # Minimalistyczny styl wykresu
scale_fill_manual(values = c("subordinated" = "#1f77b4", "senior secured" = "#ff7f0e", "senior unsecured" = "#2ca02c"))
library(tidyr)
stopy_zwrotu_long <- pivot_longer(stopy_zwrotu, cols = starts_with("Year"), names_to = "Year", values_to = "StopaZwrotu")
stopy_zwrotu_long$Year <- as.numeric(gsub("Year", "", stopy_zwrotu_long$Year))
ggplot(stopy_zwrotu_long, aes(x = Year, y = StopaZwrotu, group = Rating)) +
geom_line(size = 1) +  # Linie dla każdego ratingu
geom_point(size = 2) +  # Punkty na wykresie
labs(
title = "Prognozowane stopy zwrotu",
x = "",
y = "Stopa zwrotu (%)",
color = "Rating"
) +
theme_minimal(base_size = 18) +
scale_x_continuous(breaks = 1:4, labels = c("Year 1", "Year 2", "Year 3", "Year 4")) +
scale_y_continuous(limits = c(0, 16)) +
scale_fill_manual(values = c("A" = "#1f77b4", "B" = "#ff7f0e", "CCC" = "#2ca02c")) # Zakres osi Y
library(tidyr)
stopy_zwrotu_long <- pivot_longer(stopy_zwrotu, cols = starts_with("Year"), names_to = "Year", values_to = "StopaZwrotu")
stopy_zwrotu_long$Year <- as.numeric(gsub("Year", "", stopy_zwrotu_long$Year))
ggplot(stopy_zwrotu_long, aes(x = Year, y = StopaZwrotu, color = Rating, group = Rating)) +
geom_line(size = 1) +  # Linie dla każdego ratingu
geom_point(size = 2) +  # Punkty na wykresie
labs(
title = "Prognozowane stopy zwrotu",
x = "",
y = "Stopa zwrotu (%)",
color = "Rating"
) +
theme_minimal(base_size = 18) +
scale_x_continuous(breaks = 1:4, labels = c("Year 1", "Year 2", "Year 3", "Year 4")) +
scale_y_continuous(limits = c(0, 16)) +
scale_fill_manual(values = c("A" = "#1f77b4", "B" = "#ff7f0e", "CCC" = "#2ca02c")) # Zakres osi Y
ggplot(stopy_zwrotu_long, aes(x = Year, y = StopaZwrotu, color = Rating, group = Rating)) +
geom_line(size = 1) +  # Linie dla każdego ratingu
geom_point(size = 2) +  # Punkty na wykresie
labs(
title = "Prognozowane stopy zwrotu",
x = "",
y = "Stopa zwrotu (%)",
color = "Rating"
) +
theme_minimal(base_size = 18) +
scale_x_continuous(breaks = 1:4, labels = c("Year 1", "Year 2", "Year 3", "Year 4")) +
scale_y_continuous(limits = c(0, 16)) +
scale_color_manual(values = c("A" = "#1f77b4", "B" = "#ff7f0e", "CCC" = "#2ca02c")) # Zakres osi Y
library(tidyr)
stopy_zwrotu_long <- pivot_longer(stopy_zwrotu, cols = starts_with("Year"), names_to = "Year", values_to = "StopaZwrotu")
stopy_zwrotu_long$Year <- as.numeric(gsub("Year", "", stopy_zwrotu_long$Year))
ggplot(stopy_zwrotu_long, aes(x = Year, y = StopaZwrotu, color = Rating, group = Rating)) +
geom_line(size = 1) +  # Linie dla każdego ratingu
geom_point(size = 2) +  # Punkty na wykresie
labs(
title = "Prognozowane stopy zwrotu",
x = "",
y = "Stopa zwrotu (%)",
color = "Rating"
) +
theme_minimal(base_size = 18) +
scale_x_continuous(breaks = 1:4, labels = c("Year 1", "Year 2", "Year 3", "Year 4")) +
scale_y_continuous(limits = c(0, 16)) +
scale_color_manual(values = c("A" = "#CD1076", "B" = "orange", "CCC" = "#2ca02c")) # Zakres osi Y
ggplot(recovery_rate, aes(x = klasa, y = stopa, fill = klasa)) +
geom_bar(stat = "identity", width = 0.6) +  # Wykres słupkowy
labs(
title = "Stopy odzysku ",
x = "Klasa obligacji",
y = "Stopa odzysku (%)",
fill = "Klasa obligacji",
legend = NULL
) +
theme_minimal(base_size = 18) +  # Minimalistyczny styl wykresu
scale_fill_manual(values = c("subordinated" = "#CD1076", "senior secured" = "orange", "senior unsecured" = "#2ca02c"))
ggplot(recovery_rate, aes(x = klasa, y = stopa, fill = klasa)) +
geom_bar(stat = "identity", width = 0.6) +  # Wykres słupkowy
labs(
title = "Stopy odzysku ",
x = "Klasa obligacji",
y = "Stopa odzysku (%)",
fill = "Klasa obligacji",
legend = NULL
) +
theme_minimal(base_size = 18) +  # Minimalistyczny styl wykresu
scale_fill_manual(values = c("subordinated" = "#CD1076", "senior secured" = "orange", "senior unsecured" = "#2ca02c")) +  # Kolory słupków
theme(legend.position = "none")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
library(MASS)
database <- read_excel("C:/Users/olgas/OneDrive/Documents/GitHub/Quantative-risk-models-summit/dane_cm.xlsx", sheet = "dane")
obligacje <- data.frame(
rating = c("A", "B", "CCC"),
cena_wykupu = c(100000, 50000, 50000),
czas_do_wykupu = c(3, 5, 2),
typ = c("subordinated", "senior secured", "senior unsecured")
)
recovery_rate <- data.frame (
klasa = c("subordinated", "senior secured", "senior unsecured"),
stopa = c(32.74, 53.8, 51.13)
)
stopy_zwrotu <- data.frame(
Rating = c( "A", "B", "CCC"),
Year1 = c( 3.72,  6.05, 15.05),
Year2 = c( 4.32,  7.02, 15.02),
Year3 = c( 4.93,  8.03, 14.03),
Year4 = c( 5.32,  8.52, 13.52)
)
cor_matrix <- matrix(c(1, 0.2, 0.15,
0.2, 1, 0.4,
0.15, 0.4, 1), nrow = 3)
p <- as.data.frame(cor_matrix)
rownames(p) <- c(c("V1", "V2", "V3"))
p
library(tidyr)
stopy_zwrotu_long <- pivot_longer(stopy_zwrotu, cols = starts_with("Year"), names_to = "Year", values_to = "StopaZwrotu")
stopy_zwrotu_long$Year <- as.numeric(gsub("Year", "", stopy_zwrotu_long$Year))
ggplot(stopy_zwrotu_long, aes(x = Year, y = StopaZwrotu, color = Rating, group = Rating)) +
geom_line(size = 1) +  # Linie dla każdego ratingu
geom_point(size = 2) +  # Punkty na wykresie
labs(
title = "Prognozowane stopy zwrotu",
x = "",
y = "Stopa zwrotu (%)",
color = "Rating"
) +
theme_minimal(base_size = 18) +
scale_x_continuous(breaks = 1:4, labels = c("Year 1", "Year 2", "Year 3", "Year 4")) +
scale_y_continuous(limits = c(0, 16)) +
scale_color_manual(values = c("A" = "#CD1076", "B" = "orange", "CCC" = "#2ca02c")) # Zakres osi Y
ggplot(recovery_rate, aes(x = klasa, y = stopa, fill = klasa)) +
geom_bar(stat = "identity", width = 0.6) +  # Wykres słupkowy
labs(
title = "Stopy odzysku ",
x = "Klasa obligacji",
y = "Stopa odzysku (%)",
fill = "Klasa obligacji",
legend = NULL
) +
theme_minimal(base_size = 18) +  # Minimalistyczny styl wykresu
scale_fill_manual(values = c("subordinated" = "#CD1076", "senior secured" = "orange", "senior unsecured" = "#2ca02c")) +  # Kolory słupków
theme(legend.position = "none")
portfel_symulacja <- function(ratings, obligacje, cor_matrix, n_sim, recovery_rate, stopy_zwrotu) {
portfolio_values <- numeric(n_sim)
for (i in 1:n_sim) {
changes <- mvrnorm(1, mu = rep(0, nrow(obligacje)), Sigma = cor_matrix)
values <- numeric(nrow(obligacje))
for (j in 1:nrow(obligacje)) {
current_rating <- ratings[i, j]
czas_do_wykupu <- obligacje$czas_do_wykupu[j]
stopa_zwrotu <- stopy_zwrotu[current_rating, czas_do_wykupu]
if (current_rating == "D") {  # Default
values[j] <- obligacje$cena_wykupu[j] * recovery_rate[recovery_rate$klasa == "subordinated",2]
} else {
values[j] <- obligacje$cena_wykupu[j] * (1 + stopa_zwrotu / 100)
}
}
portfolio_values[i] <- sum(values)
}
return(portfolio_values)
}
portfolio_values <- sim_portfolio(database, obligacje, cor_matrix, 1000,recovery_rate, stopy_zwrotu)
portfolio_values <- portfel_symulacja(database, obligacje, cor_matrix, 1000,recovery_rate, stopy_zwrotu)
stopy_zwrotu_long
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(foreign)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
library(MASS)
database <- read_excel("C:/Users/olgas/OneDrive/Documents/GitHub/Quantative-risk-models-summit/dane_cm.xlsx", sheet = "dane")
obligacje <- data.frame(
rating = c("A", "B", "CCC"),
cena_wykupu = c(100000, 50000, 50000),
czas_do_wykupu = c(3, 5, 2),
typ = c("subordinated", "senior secured", "senior unsecured")
)
recovery_rate <- data.frame (
klasa = c("subordinated", "senior secured", "senior unsecured"),
stopa = c(32.74, 53.8, 51.13)
)
stopy_zwrotu <- data.frame(
Rating = c( "A", "B", "CCC"),
Year1 = c( 3.72,  6.05, 15.05),
Year2 = c( 4.32,  7.02, 15.02),
Year3 = c( 4.93,  8.03, 14.03),
Year4 = c( 5.32,  8.52, 13.52)
)
cor_matrix <- matrix(c(1, 0.2, 0.15,
0.2, 1, 0.4,
0.15, 0.4, 1), nrow = 3)
p <- as.data.frame(cor_matrix)
rownames(p) <- c(c("V1", "V2", "V3"))
p
library(tidyr)
stopy_zwrotu_long <- pivot_longer(stopy_zwrotu, cols = starts_with("Year"), names_to = "Year", values_to = "StopaZwrotu")
stopy_zwrotu_long$Year <- as.numeric(gsub("Year", "", stopy_zwrotu_long$Year))
ggplot(stopy_zwrotu_long, aes(x = Year, y = StopaZwrotu, color = Rating, group = Rating)) +
geom_line(size = 1) +  # Linie dla każdego ratingu
geom_point(size = 2) +  # Punkty na wykresie
labs(
title = "Prognozowane stopy zwrotu",
x = "",
y = "Stopa zwrotu (%)",
color = "Rating"
) +
theme_minimal(base_size = 18) +
scale_x_continuous(breaks = 1:4, labels = c("Year 1", "Year 2", "Year 3", "Year 4")) +
scale_y_continuous(limits = c(0, 16)) +
scale_color_manual(values = c("A" = "#CD1076", "B" = "orange", "CCC" = "#2ca02c")) # Zakres osi Y
ggplot(recovery_rate, aes(x = klasa, y = stopa, fill = klasa)) +
geom_bar(stat = "identity", width = 0.6) +  # Wykres słupkowy
labs(
title = "Stopy odzysku ",
x = "Klasa obligacji",
y = "Stopa odzysku (%)",
fill = "Klasa obligacji",
legend = NULL
) +
theme_minimal(base_size = 18) +  # Minimalistyczny styl wykresu
scale_fill_manual(values = c("subordinated" = "#CD1076", "senior secured" = "orange", "senior unsecured" = "#2ca02c")) +  # Kolory słupków
theme(legend.position = "none")
stopy_zwrotu$Year5 <- c(5.9, 9.5, 13.0)
portfel_symulacja <- function(ratings, obligacje, cor_matrix, n_sim, recovery_rate, stopy_zwrotu) {
portfolio_values <- numeric(n_sim)
for (i in 1:n_sim) {
changes <- mvrnorm(1, mu = rep(0, nrow(obligacje)), Sigma = cor_matrix)
values <- numeric(nrow(obligacje))
for (j in 1:nrow(obligacje)) {
current_rating <- ratings[i, j]
czas_do_wykupu <- obligacje$czas_do_wykupu[j]
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating==current_rating)
stopa_zwrotu <- stopa_zwrotu_1[1+czas_do_wykupu,]
if (current_rating == "D") {
values[j] <- obligacje$cena_wykupu[j] * recovery_rate[recovery_rate$klasa == "subordinated",2]
} else {
values[j] <- obligacje$cena_wykupu[j] * (1 + stopa_zwrotu / 100)
}
}
portfolio_values[i] <- sum(values)
}
return(portfolio_values)
}
portfolio_values <- portfel_symulacja(database, obligacje, cor_matrix, 1000,recovery_rate, stopy_zwrotu)
stopy_zwrotu$Year5 <- c(5.9, 9.5, 13.0)
portfel_symulacja <- function(ratings, obligacje, cor_matrix, n_sim, recovery_rate, stopy_zwrotu) {
portfolio_values <- numeric(n_sim)
for (i in 1:n_sim) {
changes <- mvrnorm(1, mu = rep(0, nrow(obligacje)), Sigma = cor_matrix)
values <- numeric(nrow(obligacje))
for (j in 1:nrow(obligacje)) {
current_rating <- ratings[i, j]
czas_do_wykupu <- as.numeric(obligacje$czas_do_wykupu[j])
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating==current_rating)
stopa_zwrotu <- stopa_zwrotu_1[1+czas_do_wykupu,]
if (current_rating == "D") {
values[j] <- obligacje$cena_wykupu[j] * recovery_rate[recovery_rate$klasa == "subordinated",2]
} else {
values[j] <- obligacje$cena_wykupu[j] * (1 + stopa_zwrotu / 100)
}
}
portfolio_values[i] <- sum(values)
}
return(portfolio_values)
}
portfolio_values <- portfel_symulacja(database, obligacje, cor_matrix, 1000,recovery_rate, stopy_zwrotu)
stopy_zwrotu$Year5 <- c(5.9, 9.5, 13.0)
portfel_symulacja <- function(ratings, obligacje, cor_matrix, n_sim, recovery_rate, stopy_zwrotu) {
portfolio_values <- numeric(n_sim)
for (i in 1:n_sim) {
changes <- mvrnorm(1, mu = rep(0, nrow(obligacje)), Sigma = cor_matrix)
values <- numeric(nrow(obligacje))
for (j in 1:nrow(obligacje)) {
current_rating <- ratings[i, j]
czas_do_wykupu <- as.numeric(obligacje$czas_do_wykupu[j])
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating==current_rating)
stopa_zwrotu <- stopa_zwrotu_1[1+czas_do_wykupu,]
print(stopa_zwrotu)
if (current_rating == "D") {
values[j] <- obligacje$cena_wykupu[j] * recovery_rate[recovery_rate$klasa == "subordinated",2]
} else {
values[j] <- obligacje$cena_wykupu[j] * (1 + stopa_zwrotu / 100)
}
}
portfolio_values[i] <- sum(values)
}
return(portfolio_values)
}
portfolio_values <- portfel_symulacja(database, obligacje, cor_matrix, 1000,recovery_rate, stopy_zwrotu)
stopy_zwrotu$Year5 <- c(5.9, 9.5, 13.0)
portfel_symulacja <- function(ratings, obligacje, cor_matrix, n_sim, recovery_rate, stopy_zwrotu) {
portfolio_values <- numeric(n_sim)
for (i in 1:n_sim) {
changes <- mvrnorm(1, mu = rep(0, nrow(obligacje)), Sigma = cor_matrix)
values <- numeric(nrow(obligacje))
for (j in 1:nrow(obligacje)) {
current_rating <- ratings[i, j]
czas_do_wykupu <- as.numeric(obligacje$czas_do_wykupu[j])
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating==current_rating)
stopa_zwrotu <- stopa_zwrotu_1[,1+czas_do_wykupu]
print(stopa_zwrotu)
if (current_rating == "D") {
values[j] <- obligacje$cena_wykupu[j] * recovery_rate[recovery_rate$klasa == "subordinated",2]
} else {
values[j] <- obligacje$cena_wykupu[j] * (1 + stopa_zwrotu / 100)
}
}
portfolio_values[i] <- sum(values)
}
return(portfolio_values)
}
portfolio_values <- portfel_symulacja(database, obligacje, cor_matrix, 1000,recovery_rate, stopy_zwrotu)
portfel_symulacja <- function(ratings, obligacje, cor_matrix, n_sim, recovery_rate, stopy_zwrotu) {
portfolio_values <- numeric(n_sim)
for (i in 1:n_sim) {
changes <- mvrnorm(1, mu = rep(0, nrow(obligacje)), Sigma = cor_matrix)
values <- numeric(nrow(obligacje))
for (j in 1:nrow(obligacje)) {
current_rating <- ratings[i, j]
czas_do_wykupu <- as.numeric(obligacje$czas_do_wykupu[j])
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating==current_rating)
stopa_zwrotu <- stopa_zwrotu_1[,1+czas_do_wykupu]
print(stopa_zwrotu)
if (current_rating == "D") {
values[j] <- obligacje$cena_wykupu[j] * recovery_rate[recovery_rate$klasa == "subordinated",2]
} else {
values[j] <- obligacje$cena_wykupu[j] * (1 + stopa_zwrotu / 100)
}
}
portfolio_values[i] <- sum(values)
}
return(portfolio_values)
}
portfolio_values <- portfel_symulacja(database, obligacje, cor_matrix, 1000,recovery_rate, stopy_zwrotu)
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating==current_rating)
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating=="A")
stopa_zwrotu <- stopa_zwrotu_1[,1+czas_do_wykupu]
czas_do_wykupu <- as.numeric(obligacje$czas_do_wykupu[1])
stopa_zwrotu <- stopa_zwrotu_1[,1+czas_do_wykupu]
print(stopa_zwrotu)
values[j] <- as.numeric(obligacje$cena_wykupu[j]) * (1 + stopa_zwrotu / 100)
stopy_zwrotu$Year5 <- c(5.9, 9.5, 13.0)
portfel_symulacja <- function(ratings, obligacje, cor_matrix, n_sim, recovery_rate, stopy_zwrotu) {
portfolio_values <- numeric(n_sim)
for (i in 1:n_sim) {
changes <- mvrnorm(1, mu = rep(0, nrow(obligacje)), Sigma = cor_matrix)
values <- numeric(nrow(obligacje))
for (j in 1:nrow(obligacje)) {
current_rating <- ratings[i, j]
czas_do_wykupu <- as.numeric(obligacje$czas_do_wykupu[j])
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating==current_rating)
stopa_zwrotu <- stopa_zwrotu_1[,1+czas_do_wykupu]
print(stopa_zwrotu)
if (current_rating == "D") {
values[j] <- obligacje$cena_wykupu[j] * recovery_rate[recovery_rate$klasa == "subordinated",2]
} else {
values[j] <- as.numeric(obligacje$cena_wykupu[j]) * (1 + stopa_zwrotu / 100)
}
}
portfolio_values[i] <- sum(values)
}
return(portfolio_values)
}
portfolio_values <- portfel_symulacja(database, obligacje, cor_matrix, 1000,recovery_rate, stopy_zwrotu)
obligacje$cena_wykupu[1] * (1 + stopa_zwrotu / 100)
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating=="A")
czas_do_wykupu <- as.numeric(obligacje$czas_do_wykupu[1])
stopa_zwrotu <- stopa_zwrotu_1[,1+czas_do_wykupu]
print(stopa_zwrotu)
obligacje$cena_wykupu[1] * (1 + stopa_zwrotu / 100)
obligacje$cena_wykupu[1]
portfel_symulacja <- function(ratings, obligacje, cor_matrix, n_sim, recovery_rate, stopy_zwrotu) {
portfolio_values <- numeric(n_sim)
for (i in 1:n_sim) {
changes <- mvrnorm(1, mu = rep(0, nrow(obligacje)), Sigma = cor_matrix)
values <- numeric(nrow(obligacje))
for (j in 1:nrow(obligacje)) {
current_rating <- ratings[i, j]
czas_do_wykupu <- as.numeric(obligacje$czas_do_wykupu[j])
stopa_zwrotu_1 <- stopy_zwrotu%>%
filter(Rating==current_rating)
stopa_zwrotu <- stopa_zwrotu_1[,1+czas_do_wykupu]
print(stopa_zwrotu)
if (current_rating == "D") {
values[j] <- obligacje$cena_wykupu[j] * recovery_rate[recovery_rate$klasa == "subordinated",2]
} else {
values[j] <- obligacje$cena_wykupu[j] * (1 + stopa_zwrotu)
}
}
portfolio_values[i] <- sum(values)
}
return(portfolio_values)
}
portfolio_values <- portfel_symulacja(database, obligacje, cor_matrix, 1000,recovery_rate, stopy_zwrotu)
